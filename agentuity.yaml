# yaml-language-server: $schema=https://raw.githubusercontent.com/agentuity/cli/refs/heads/main/agentuity.schema.json

# ------------------------------------------------
# This file is generated by Agentuity
# You should check this file into version control
# ------------------------------------------------

# The version semver range required to run this project
version: ">=0.0.166"
# The ID of the project which is automatically generated
project_id: proj_2e801790c37b125c0565ea69bad3e9f4
# The name of the project which is editable
name: kitchen-sink-ts
# The description of the project which is editable
description: A demo project that showcases all of Agentuity's SDK functionality
# The development configuration for the project
development:
  # The port to run the development server on which can be overridden by setting the PORT environment variable
  port: 3500
  watch:
    # Whether to watch for changes and automatically restart the server
    enabled: true
    # Rules for files to watch for changes
    files:
      - src/**
  # The command to run the development server
  command: bun
  # The arguments to pass to the development server
  args:
    - run
    - --silent
    - --env-file=.env
    - --env-file=.env.development
    - .agentuity/index.js
deployment:
  command: bun
  args:
    - run
    - --no-install
    - --prefer-offline
    - --silent
    - --no-macros
    - --no-global-search-paths
    - --report-uncaught-exception
    - --disable-sigusr1
    - --disallow-code-generation-from-strings
    - --no-addons
    - --no-deprecation
    - .agentuity/index.js
  # You should tune the resources for the deployment
  resources:
    # The memory requirements
    memory: 2Gi
    # The CPU requirements
    cpu: 2000M
    # The disk size requirements
    disk: 250Mi
  # The deployment mode
  mode:
    # on-demand or provisioned
    type: on-demand
# You should not need to change these value
bundler:
  enabled: true
  identifier: bunjs
  language: javascript
  runtime: bunjs
  agents:
    dir: src/agents
  ignore:
    - "**/*"
    - "!/.agentuity/**"
    - "!/agentuity.yaml"
# The agents that are part of this project
agents:
  - # The ID of the Agent which is automatically generated
    id: agent_92281cf4dfa7c96dcd10f0a0a0d497b8
    # The name of the Agent which is editable
    name: kitchen-sink
    # The description of the Agent which is editable
    description: Overview agent
  - id: agent_3edb0dc39f4c6df9623b3b0473201648
    name: handler-request
    description: Demonstrates how to use the request in the agent handler
  - id: agent_a2d37fcdd47a1df58c621022909932ba
    name: handler-response
    description: Demonstrates how to use the response in the agent handler
  - id: agent_d5f02d25b74b27c9355496b375b74e54
    name: handler-context
    description: Demonstrates how to use the context in the agent handler
  - id: agent_82fcaaf882776fc25bee8bdddd58a56f
    name: frameworks-provider
    description: Demonstrates how to use multiple framework providers
  - id: agent_36dfa1cde175f6021775244b45919046
    name: gateway-provider
    description: Demonstrates how to use multiple LLM providers through the AI Gateway
  - id: agent_a0537aa43439eaab3ff81b118b4ca70e
    name: gateway-byo-token
    description: Demonstrates the ability to bring-your-own-token instead of utilizing the AI Gateway
  - id: agent_a9a95d9f3449132c9e5054e3f56d1c18
    name: io-agent
    description: Demonstrates using the Agent-to-Agent IO
  - id: agent_b61035c3341ac311663fad947c57eb7e
    name: io-api
    description: Demonstrates using the API IO
  - id: agent_488533727acc40a87edf80e8f16c3e7a
    name: io-cron
    description: Demonstrates using the Cron IO
  - id: agent_ed67ba4cf89e4e46d3e9a54c127b9bf1
    name: io-email
    description: Demonstrates using the Email IO
  - id: agent_ec172a94fefa741a46e5c1882f39dc99
    name: io-sms
    description: Demonstrates using the SMS IO
  - id: agent_b45feaf99bbdb042b3e8838c8544abe7
    name: io-webhook
    description: Demonstrates using the Webhook IO
  - id: agent_5aed4255f2e621dc79b5423836f960df
    name: storage-key-value
    description: Demonstrates how to use the Key-Value store
  - id: agent_5fa4d2de738b0ec0a1f81c99521ad0c6
    name: storage-object-store
    description: Demonstrates how to use the Object Store
  - id: agent_8f0d81ed71a781a684dad2d507e3f4e4
    name: storage-vector
    description: Demonstrates how to use the Vector store
  - id: agent_8e2a2723183726da9a7c9902582f91ed
    name: observability-logging
    description: Demonstrates how to use the context logger
  - id: agent_f265049c16381601c6d8d4e654caff7e
    name: observability-tracing
    description: Demonstrates how to use the context tracing
  - id: agent_f7d8cd2397865355efd0eb21d54f726f
    name: example-chat
    description: Demonstrates how to create a standard chatbot-style agent
  - id: agent_ea8541efc22cee1ba53bb03f18324a9e
    name: example-composio
    description: Demonstrates how to integrate with the Composio tool bridge
  - id: agent_0478e40d5b58b63070bf948f68f3c3a5
    name: example-discord
    description: Demonstrates how to integrate with a Discord bot
  - id: agent_2ddc01490cd360ec3d1d594999bda18e
    name: example-slack
    description: Demonstrates how to integrate with a Slack bot
  - id: agent_fee72e13a3fdc7f0783abd65220d352d
    name: test-suite
    description: Tests the functionality of all Kitchen Sink example agents
  - id: agent_52f73139a881ee0e1cdfafb3c6404e70
    name: example-telegram
    description: Demonstrates how to integrate with a Telegram bot
  - id: agent_c38f9a6d8d3edc6bde56047cbfd16c6f
    name: example-streaming
    description: Demonstrates advanced agent streaming patterns
  - id: agent_4268cac212e32dae1f6a7c394d2c6b9d
    name: example-llm-judge
    description: Demonstrates LLM-as-a-judge pattern for evaluating AI outputs
  - id: agent_ebc87cc45db854eff103e3d54cefa24a
    name: example-teams
    description: Demonstrates how to integrate with a Microsoft Teams bot
